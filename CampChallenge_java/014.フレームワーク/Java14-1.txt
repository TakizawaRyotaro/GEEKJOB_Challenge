◯Spring Framework
・DI(依存性注入)：オブジェクトが他のオブジェクトを利用するコードを「依存性」のあるコード(注1)と呼び、実行時に結合する設計思想のことをDIという。DIは依存性を排除するという事で、これにより結果的にコードの簡素化、テス　　　
　　　　　　　　  トの簡易化、コード改修・移行の簡易化が見込まれる。
・AOP(アスペクト思考プログラミング)：クラスに分解できない要素を「アスペクト」としてモジュール化し、管理・変更・追加を容易にする。元のソースコードに変更を加えずに、新たな処理を追加することができる。

◯Java EE 
・フルスタックフレームワーク：ServletやJSP、EJBやJavaの各種APIなど大規模システムの構築に必要な昨日がまとめて提供されている。　
・標準＝Oracle社のサポートあり：世界中の技術者がチェックしているフレームワークでもあり、参考になる記事や書籍がある。Oracle社による研修や認定資格があるのも他にはない特徴である。しかし、フレームワークだけに更新頻度は遅く、最新技術を反映させるよりも標準仕様としての安定感が重視されている模様。

◯Play Framework
・軽量さと高い生産性に特徴あり。CPUリソースやメモリ消費量が少ないので軽快に動作、Java標準のWEBアプリケーション仕様であるJava EEに準拠していない代わりにシンプルに開発を進められるメリットがある。

(注1):例えばあるプログラムAが別のプログラムB内に処理を移動させて戻るようなプログラムだったとする。Aが完成し、試験を行いたいと思ってもBができていないと試験が不可能で、不具合があったとしてもAにあるのかBにあるのか　　　　
　　  わかりにくくなる。
